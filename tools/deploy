#!/usr/bin/env bash

########################################################
###                        Help                      ###
########################################################

HELP='
Deploy.

Usage:

    deploy [action]

Parameters:

    * action

        Deploy actions.

        - build  Deploy a build.
'

########################################################
###                     Variables                    ###
########################################################

# Project name
if [[ -z $PROJECT_NAME ]]; then
    echo 'Error: set the "PROJECT_NAME" variable'
    exit 1
fi

# Remote host
if [[ -z $REMOTE_HOST ]]; then
    echo 'Error: set the "REMOTE_HOST" variable'
    exit 1
fi

# Remote user
if [[ -z $REMOTE_USER ]]; then
    echo 'Error: set the "REMOTE_USER" variable'
    exit 1
fi

# Remote build directory
if [[ -z $REMOTE_BUILD_DIR ]]; then
    echo 'Error: set the "REMOTE_BUILD_DIR" variable'
    exit 1
fi

# Remote project directory
if [[ -z $REMOTE_PROJECT_DIR ]]; then
    echo 'Error: set the "REMOTE_PROJECT_DIR" variable'
    exit 1
fi

# Build number
if [[ -z $BUILD_NUMBER ]]; then
    echo 'Error: set the "BUILD_NUMBER" variable'
    exit 1
fi

# Build generation
if [[ -z $BUILD_GENERATION ]]; then
    BUILD_GENERATION='0.0'
fi

########################################################
###                      Helpers                     ###
########################################################

#
# Print a title of action
#
# @1 {string} Title
#
printTitle() {
    echo "===> $1"
}

########################################################
###                     Actions                      ###
########################################################

#
# Help
#
help() {
    echo "$HELP"
}

release() {
    local buildName='build'
    local buildArchive="$buildName.tgz"
    local remoteBuildName="$BUILD_GENERATION.$BUILD_NUMBER"
    local remoteProjectNginxDir="$REMOTE_PROJECT_DIR/configs/nginx"
    local remoteProjectNginxIncludesDir="$remoteProjectNginxDir/includes"

    local nginxDir='/etc/nginx'
    local nginxSitesAvailableConf="$nginxDir/sites-available/$PROJECT_NAME.conf"
    local nginxSitesIncludeProjectDir="$nginxDir/sites-include/$PROJECT_NAME"

    printTitle 'Uploading a build archive'

    scp "$buildArchive" "$REMOTE_USER@$REMOTE_HOST:$REMOTE_BUILD_DIR"

    printTitle 'Deploying the build'

    ssh "$REMOTE_USER@$REMOTE_HOST" << REMOTE

        echo '===> Extracting the build archive'

        cd "$REMOTE_BUILD_DIR"
        tar -xzf "$buildArchive" --transform s/"$buildName/$remoteBuildName/" >/dev/null 2>&1
        rm -f "$buildArchive"

        echo "===> Creating a symlink to the build"

        mkdir -p $(dirname "$REMOTE_PROJECT_DIR")
        ln -sfn "$REMOTE_BUILD_DIR/$remoteBuildName" "$REMOTE_PROJECT_DIR"

        echo '===> Deploy a nginx config'

        rm -f "$nginxSitesAvailableConf"
        cp "$remoteProjectNginxDir/nginx.conf" "$nginxSitesAvailableConf"

        ln -sfn \
            "$nginxSitesAvailableConf" \
            "$nginxDir/sites-enabled/$PROJECT_NAME.conf"

        rm -rf "$nginxSitesIncludeProjectDir"

        if [[ -d $remoteProjectNginxIncludesDir ]]; then
            mkdir -p "$nginxSitesIncludeProjectDir"
            cp "$remoteProjectNginxIncludesDir"/* "$nginxSitesIncludeProjectDir"
        fi
REMOTE
}

########################################################
###                    Call action                   ###
########################################################

case "$1" in
    release)
        "$1"
    ;;
    *)
        help
    ;;
esac
